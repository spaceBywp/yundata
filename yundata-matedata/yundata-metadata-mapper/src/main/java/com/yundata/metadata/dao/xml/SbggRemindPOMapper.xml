<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yundata.metadata.dao.mapper.SbggRemindPOMapper" >
  <resultMap id="BaseResultMap" type="com.yundata.metadata.model.po.SbggRemindPO" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="admin_user_info_id" property="adminUserInfoId" jdbcType="VARCHAR" />
    <result column="regist_number" property="registNumber" jdbcType="VARCHAR" />
    <result column="category_number" property="categoryNumber" jdbcType="INTEGER" />
    <result column="remind" property="remind" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, admin_user_info_id, regist_number, category_number, remind
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yundata.metadata.model.po.SbggRemindPOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sbgg_remind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sbgg_remind
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sbgg_remind
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yundata.metadata.model.po.SbggRemindPOExample" >
    delete from sbgg_remind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yundata.metadata.model.po.SbggRemindPO" >
    insert into sbgg_remind (id, admin_user_info_id, regist_number, 
      category_number, remind)
    values (#{id,jdbcType=VARCHAR}, #{adminUserInfoId,jdbcType=VARCHAR}, #{registNumber,jdbcType=VARCHAR}, 
      #{categoryNumber,jdbcType=INTEGER}, #{remind,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yundata.metadata.model.po.SbggRemindPO" >
    insert into sbgg_remind
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="adminUserInfoId != null" >
        admin_user_info_id,
      </if>
      <if test="registNumber != null" >
        regist_number,
      </if>
      <if test="categoryNumber != null" >
        category_number,
      </if>
      <if test="remind != null" >
        remind,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="adminUserInfoId != null" >
        #{adminUserInfoId,jdbcType=VARCHAR},
      </if>
      <if test="registNumber != null" >
        #{registNumber,jdbcType=VARCHAR},
      </if>
      <if test="categoryNumber != null" >
        #{categoryNumber,jdbcType=INTEGER},
      </if>
      <if test="remind != null" >
        #{remind,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yundata.metadata.model.po.SbggRemindPOExample" resultType="java.lang.Integer" >
    select count(*) from sbgg_remind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sbgg_remind
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.adminUserInfoId != null" >
        admin_user_info_id = #{record.adminUserInfoId,jdbcType=VARCHAR},
      </if>
      <if test="record.registNumber != null" >
        regist_number = #{record.registNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryNumber != null" >
        category_number = #{record.categoryNumber,jdbcType=INTEGER},
      </if>
      <if test="record.remind != null" >
        remind = #{record.remind,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sbgg_remind
    set id = #{record.id,jdbcType=VARCHAR},
      admin_user_info_id = #{record.adminUserInfoId,jdbcType=VARCHAR},
      regist_number = #{record.registNumber,jdbcType=VARCHAR},
      category_number = #{record.categoryNumber,jdbcType=INTEGER},
      remind = #{record.remind,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yundata.metadata.model.po.SbggRemindPO" >
    update sbgg_remind
    <set >
      <if test="adminUserInfoId != null" >
        admin_user_info_id = #{adminUserInfoId,jdbcType=VARCHAR},
      </if>
      <if test="registNumber != null" >
        regist_number = #{registNumber,jdbcType=VARCHAR},
      </if>
      <if test="categoryNumber != null" >
        category_number = #{categoryNumber,jdbcType=INTEGER},
      </if>
      <if test="remind != null" >
        remind = #{remind,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yundata.metadata.model.po.SbggRemindPO" >
    update sbgg_remind
    set admin_user_info_id = #{adminUserInfoId,jdbcType=VARCHAR},
      regist_number = #{registNumber,jdbcType=VARCHAR},
      category_number = #{categoryNumber,jdbcType=INTEGER},
      remind = #{remind,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>