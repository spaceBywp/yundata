<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yundata.metadata.dao.mapper.UserAuthPOMapper" >
  <resultMap id="BaseResultMap" type="com.yundata.metadata.model.po.UserAuthPO" >
    <id column="user_auth_id" property="userAuthId" jdbcType="VARCHAR" />
    <result column="auth_name" property="authName" jdbcType="VARCHAR" />
    <result column="user_info_id" property="userInfoId" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="auth_id" property="authId" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="add_user_id" property="addUserId" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_auth_id, auth_name, user_info_id, role_id, auth_id, memo, add_time, add_user_id, 
    update_time, update_user_id, is_del
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yundata.metadata.model.po.UserAuthPOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_auth
    where user_auth_id = #{userAuthId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_auth
    where user_auth_id = #{userAuthId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yundata.metadata.model.po.UserAuthPOExample" >
    delete from user_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yundata.metadata.model.po.UserAuthPO" >
    insert into user_auth (user_auth_id, auth_name, user_info_id, 
      role_id, auth_id, memo, 
      add_time, add_user_id, update_time, 
      update_user_id, is_del)
    values (#{userAuthId,jdbcType=VARCHAR}, #{authName,jdbcType=VARCHAR}, #{userInfoId,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=VARCHAR}, #{authId,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, 
      #{addTime,jdbcType=TIMESTAMP}, #{addUserId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yundata.metadata.model.po.UserAuthPO" >
    insert into user_auth
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userAuthId != null" >
        user_auth_id,
      </if>
      <if test="authName != null" >
        auth_name,
      </if>
      <if test="userInfoId != null" >
        user_info_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="authId != null" >
        auth_id,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="addUserId != null" >
        add_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userAuthId != null" >
        #{userAuthId,jdbcType=VARCHAR},
      </if>
      <if test="authName != null" >
        #{authName,jdbcType=VARCHAR},
      </if>
      <if test="userInfoId != null" >
        #{userInfoId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="authId != null" >
        #{authId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addUserId != null" >
        #{addUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yundata.metadata.model.po.UserAuthPOExample" resultType="java.lang.Integer" >
    select count(*) from user_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_auth
    <set >
      <if test="record.userAuthId != null" >
        user_auth_id = #{record.userAuthId,jdbcType=VARCHAR},
      </if>
      <if test="record.authName != null" >
        auth_name = #{record.authName,jdbcType=VARCHAR},
      </if>
      <if test="record.userInfoId != null" >
        user_info_id = #{record.userInfoId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.authId != null" >
        auth_id = #{record.authId,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addUserId != null" >
        add_user_id = #{record.addUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_auth
    set user_auth_id = #{record.userAuthId,jdbcType=VARCHAR},
      auth_name = #{record.authName,jdbcType=VARCHAR},
      user_info_id = #{record.userInfoId,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=VARCHAR},
      auth_id = #{record.authId,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      add_user_id = #{record.addUserId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yundata.metadata.model.po.UserAuthPO" >
    update user_auth
    <set >
      <if test="authName != null" >
        auth_name = #{authName,jdbcType=VARCHAR},
      </if>
      <if test="userInfoId != null" >
        user_info_id = #{userInfoId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="authId != null" >
        auth_id = #{authId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addUserId != null" >
        add_user_id = #{addUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where user_auth_id = #{userAuthId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yundata.metadata.model.po.UserAuthPO" >
    update user_auth
    set auth_name = #{authName,jdbcType=VARCHAR},
      user_info_id = #{userInfoId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      auth_id = #{authId,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      add_user_id = #{addUserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER}
    where user_auth_id = #{userAuthId,jdbcType=VARCHAR}
  </update>
</mapper>