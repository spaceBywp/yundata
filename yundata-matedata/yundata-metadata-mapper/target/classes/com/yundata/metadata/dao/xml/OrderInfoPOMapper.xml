<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yundata.metadata.dao.mapper.OrderInfoPOMapper" >
  <resultMap id="BaseResultMap" type="com.yundata.metadata.model.po.OrderInfoPO" >
    <id column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="user_info_id" property="userInfoId" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="has_paied" property="hasPaied" jdbcType="INTEGER" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="pay_date" property="payDate" jdbcType="TIMESTAMP" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="have_ticket" property="haveTicket" jdbcType="INTEGER" />
    <result column="has_closed" property="hasClosed" jdbcType="INTEGER" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="add_user_id" property="addUserId" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, user_info_id, category, title, price, has_paied, pay_type, pay_date, order_no, 
    memo, have_ticket, has_closed, add_time, add_user_id, update_time, update_user_id, 
    is_del
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yundata.metadata.model.po.OrderInfoPOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from order_info
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yundata.metadata.model.po.OrderInfoPOExample" >
    delete from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yundata.metadata.model.po.OrderInfoPO" >
    insert into order_info (order_id, user_info_id, category, 
      title, price, has_paied, 
      pay_type, pay_date, order_no, 
      memo, have_ticket, has_closed, 
      add_time, add_user_id, update_time, 
      update_user_id, is_del)
    values (#{orderId,jdbcType=VARCHAR}, #{userInfoId,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{hasPaied,jdbcType=INTEGER}, 
      #{payType,jdbcType=INTEGER}, #{payDate,jdbcType=TIMESTAMP}, #{orderNo,jdbcType=VARCHAR}, 
      #{memo,jdbcType=VARCHAR}, #{haveTicket,jdbcType=INTEGER}, #{hasClosed,jdbcType=INTEGER}, 
      #{addTime,jdbcType=TIMESTAMP}, #{addUserId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yundata.metadata.model.po.OrderInfoPO" >
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userInfoId != null" >
        user_info_id,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="hasPaied != null" >
        has_paied,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payDate != null" >
        pay_date,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="haveTicket != null" >
        have_ticket,
      </if>
      <if test="hasClosed != null" >
        has_closed,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="addUserId != null" >
        add_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="userInfoId != null" >
        #{userInfoId,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="hasPaied != null" >
        #{hasPaied,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payDate != null" >
        #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="haveTicket != null" >
        #{haveTicket,jdbcType=INTEGER},
      </if>
      <if test="hasClosed != null" >
        #{hasClosed,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addUserId != null" >
        #{addUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yundata.metadata.model.po.OrderInfoPOExample" resultType="java.lang.Integer" >
    select count(*) from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_info
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.userInfoId != null" >
        user_info_id = #{record.userInfoId,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.hasPaied != null" >
        has_paied = #{record.hasPaied,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.payDate != null" >
        pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.haveTicket != null" >
        have_ticket = #{record.haveTicket,jdbcType=INTEGER},
      </if>
      <if test="record.hasClosed != null" >
        has_closed = #{record.hasClosed,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addUserId != null" >
        add_user_id = #{record.addUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_info
    set order_id = #{record.orderId,jdbcType=VARCHAR},
      user_info_id = #{record.userInfoId,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      has_paied = #{record.hasPaied,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=INTEGER},
      pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      have_ticket = #{record.haveTicket,jdbcType=INTEGER},
      has_closed = #{record.hasClosed,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      add_user_id = #{record.addUserId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yundata.metadata.model.po.OrderInfoPO" >
    update order_info
    <set >
      <if test="userInfoId != null" >
        user_info_id = #{userInfoId,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="hasPaied != null" >
        has_paied = #{hasPaied,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payDate != null" >
        pay_date = #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="haveTicket != null" >
        have_ticket = #{haveTicket,jdbcType=INTEGER},
      </if>
      <if test="hasClosed != null" >
        has_closed = #{hasClosed,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addUserId != null" >
        add_user_id = #{addUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yundata.metadata.model.po.OrderInfoPO" >
    update order_info
    set user_info_id = #{userInfoId,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      has_paied = #{hasPaied,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_date = #{payDate,jdbcType=TIMESTAMP},
      order_no = #{orderNo,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      have_ticket = #{haveTicket,jdbcType=INTEGER},
      has_closed = #{hasClosed,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      add_user_id = #{addUserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
</mapper>